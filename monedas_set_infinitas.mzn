int:n = 10;
% set of int:monedas = {0,1,2,3,5,4,6,7,10};
% array[1..n] of var monedas: s;
% constraint sum(i in 1..n where s[i] != 0)(s[i]) = n;
% constraint forall(i in 1..n-1)(s[i] <= s[i+1]);
% var 1..n:index;
% constraint s[index] == 0;
% solve maximize index;
array[1..8] of int:monedas = [1,2,3,4,6,7,5,10];
array[1..8] of int:cantidad = [5,7,7,4,0,2,2,1];
array[1..8] of var int:x;
constraint forall(i in x)(i >= 0);
constraint sum(i in 1..8)(x[i]*monedas[i]) = n;
constraint forall(i in 1..8)(x[i] <= cantidad[i]);
solve minimize sum(x);
